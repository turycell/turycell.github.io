<!DOCTYPE html>
<html>
	<head>
		<title>Proxy</title>

		<style media="screen" type="text/css">

			textarea {
				width: 300px;
				height: 800px;
			}

			button {
				font-size: 48px;
				position: absolute;
				top: 300px;
				left: 350px;
			}

			label {
				width: 400px;
				font-size: 24px;
				position: absolute;
				top: 8px;
				left: 350px;
			}

			#custom_image {
				display: none;
			}

			.card {
				height: 314px;
				vertical-align: bottom;
			}

		</style>

		<style media="print" type="text/css">

			@page
			{
				margin: 14mm 8mm 13mm 8mm;  
			}

			.card {
				height: 83mm;
				vertical-align: bottom;
			}

		</style>

	</head>
	
	<body>

		<div id="form">
			<label for=cardlist>Incolla nel campo a sinistra la lista delle carte che vuoi proxare. Inserisci una carta per riga, usa solo i nomi in inglese. </label>
			<textarea id=cardlist name=cardlist required></textarea>
			<button onclick="renderImages()">Crea proxy!</button>
		</div>

		<input type="file" id="custom_image" name="custom_image" />

		<script type="text/javascript">
		<!--
			var target_image

			function httpGet(theUrl)
			{
				var xmlHttp = null;

				xmlHttp = new XMLHttpRequest();
				xmlHttp.open("GET", theUrl, false);
				xmlHttp.send(null);
				return xmlHttp.responseText;
			}

			function isNumber(n) {
				return !isNaN(parseFloat(n)) && isFinite(n);
			}

			function injectPicture(name)
			{
				/* If the current line is empty, do nothing. */
				if (name == "") return

				/* Remove leading and trailing spaces and check if the first
				 * word of the argument is a number or a number followed by 'x'
				 */
				name = name.trim()

				var count = name.split(" ")[0]

				if (count.slice(-1) == 'x')
					count = count.slice(0, -1)

				if (isNumber(count))
				{
					iterations = parseFloat(count)
					name = name.substr(name.indexOf(" ") + 1);
				}
				else
					iterations = 1

				var img_src = 'mtg-card-back.png'

				var match = httpGet("https://api.scryfall.com/cards/named?fuzzy=" + name)
				var card = JSON.parse(match)

				if (card.image_uris != undefined)
					img_src = card.image_uris.border_crop

				for (var i = 0; i < iterations; i++)
				{
					var img = document.createElement('img');

					img.className = "card";
					img.id = name;
					img.src = img_src;

					img.addEventListener('click', function (e) {
						target_image = e.target;
						document.getElementById("custom_image").click();
					})

					document.body.appendChild(img);
				}
			}
		
			function renderImages()
			{
				var lines = document.getElementById('cardlist').value.split('\n');

				for(var i = 0; i < lines.length; i++)
				{
					injectPicture(lines[i]);
				}
				
				document.getElementById('form').style.display = "none";
				document.getElementById('custom_image').style.display = "none";
			}

			function handleFileSelect(evt) {
				var f = evt.target.files[0];

				// Only process image files.
				if (f.type.match('image.*')) {

					var reader = new FileReader();

					// Closure to capture the file information.
					reader.onload = (function(theFile) {
						return function(e) {
							
							target_image.src=e.target.result;
						};
					})(f);

					// Read in the image file as a data URL.
					reader.readAsDataURL(f);
				}
			}

			document.getElementById("custom_image").addEventListener('change', handleFileSelect, false);

		//-->
		</script>

	</body>
</html>
